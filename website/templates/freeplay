<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Online Game</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
</head>
<body>
    <h1>Online Tic-Tac-Toe</h1>
    <p>Hráč: <span id="current-player">X</span></p>
    <p>Stav hry: <span id="game-state">Otevírání</span></p>

    <div id="game-board" class="game-board">
        {% for row in board %}
            <div class="row">
                {% for cell in row %}
                    <div class="cell" data-row="{{ loop.index0 }}" data-col="{{ loop.index1 }}">
                        {{ cell }}
                    </div>
                {% endfor %}
            </div>
        {% endfor %}
    </div>

    <div id="game-controls">
        <button id="reset-game" onclick="resetGame()">Resetovat hru</button>
    </div>

    <script>
        const gameBoard = document.getElementById('game-board');
        const currentPlayerSpan = document.getElementById('current-player');
        const gameStateSpan = document.getElementById('game-state');
        const gameUuid = "{{ game.uuid }}";  // UUID hry z backendu

        // Funkce pro zpracování tahu hráče
        gameBoard.addEventListener('click', function (event) {
            const cell = event.target;
            if (!cell.classList.contains('cell')) return;

            const row = cell.getAttribute('data-row');
            const col = cell.getAttribute('data-col');

            // Odeslání PUT požadavku na server pro zpracování tahu
            fetch(`/game/${gameUuid}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    row: parseInt(row),
                    col: parseInt(col),
                }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    updateBoard(data.board);
                    currentPlayerSpan.textContent = data.currentPlayer;
                    gameStateSpan.textContent = data.gameState;
                } else {
                    alert('Neplatný tah!');
                }
            })
            .catch(error => {
                console.error('Chyba při provádění tahu:', error);
            });
        });

        // Funkce pro aktualizaci herní desky
        function updateBoard(board) {
            const cells = gameBoard.getElementsByClassName('cell');
            let index = 0;
            for (const row of board) {
                for (const cell of row) {
                    cells[index].textContent = cell;
                    index++;
                }
            }
        }

        // Funkce pro resetování hry
        function resetGame() {
            fetch(`/game/${gameUuid}/reset`, {
                method: 'POST',
            })
            .then(response => response.json())
            .then(data => {
                updateBoard(data.board);
                currentPlayerSpan.textContent = data.currentPlayer;
                gameStateSpan.textContent = data.gameState;
            })
            .catch(error => {
                console.error('Chyba při resetování hry:', error);
            });
        }
    </script>
</body>
</html>
